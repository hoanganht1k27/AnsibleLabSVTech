#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings asdfasf
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    # log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

{% if 'pve_exporter' in type %}
frontend pve_exporter
    bind 0.0.0.0:{{ haproxy_pve_exporter_port }}
    default_backend pve_exporter_servers


backend pve_exporter_servers
    balance roundrobin
    option httpchk
    option forwardfor if-none
    {% for host in pve_exporter_hosts %}
server server{{ loop.index }} {{ host.ip }}:{{ host.port }}  check
    {% endfor %}
{% endif %}

{% if 'vmware_exporter' in type %}
frontend vmware_exporter
    bind 0.0.0.0:{{ haproxy_vmware_exporter_port }}
    default_backend vmware_exporter_servers


backend vmware_exporter_servers
    balance roundrobin
    option httpchk
    option forwardfor if-none
    {% for host in vmware_exporter_hosts %}
server server{{ loop.index }} {{ host.ip }}:{{ host.port }}  check
    {% endfor %}
{% endif %}
